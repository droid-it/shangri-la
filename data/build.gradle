apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

dependencies {

    def dataDependencies = rootProject.ext.dataDependencies
//    def dataTestDependencies = rootProject.ext.dataTestDependencies

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation project(':domain')

    implementation dataDependencies.gson

    //dagger
    kapt dataDependencies.daggerCompiler
    implementation dataDependencies.dagger
    implementation dataDependencies.daggerProcessor
    implementation dataDependencies.daggerSupport

    //retrofit2
    implementation dataDependencies.retrofit2
    implementation dataDependencies.retrofit2Converter
    implementation dataDependencies.retrofit2RxAdapter
    implementation dataDependencies.okhttp3
    implementation dataDependencies.okHttpLoggingInterceptor

    //rx
    implementation dataDependencies.rxJava
    implementation dataDependencies.rxAndroid
    implementation dataDependencies.rxKotlin

}

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

android {
    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner globalConfiguration.getAt("testInstrumentationRunner")
        testApplicationId globalConfiguration.getAt("testApplicationId")
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    buildTypes {
        debug {
        }
    }
}

kapt {
    generateStubs = true
}
